---
- name: Set up LXD containers on Ubuntu 22.04.4 server
  hosts: vmserver
  vars_files:
      - host_vars/vmserver.yml
  become: yes

  tasks:
    - name: Install snapd
      ansible.builtin.apt:
        name: snapd
        state: present

    - name: Install LXD via snap
      ansible.builtin.snap:
        name: lxd
        state: present

    - name: Add current user to LXD group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: lxd
        append: yes

    - name: Initialize LXD
      ansible.builtin.command: lxd init --auto

    - name: Create a network bridge lxdbr0
      ansible.builtin.command: lxc network create '{{ bridge_name }}'
      args:
        creates: /var/snap/lxd/common/lxd/networks/'{{ bridge_name }}'

    - name: Verify network bridge creation
      ansible.builtin.command: lxc network ls
      register: network_output

    - debug:
        var: network_output

    - name: Create storage pool named 'default'
      ansible.builtin.command: lxc storage create default dir
      args:
        creates: /var/snap/lxd/common/lxd/storage-pools/default

    - name: Verify storage pool creation
      ansible.builtin.command: lxc storage ls
      register: storage_output

    - debug:
        var: storage_output
    - name: Delete existing '{{ profile_name }}' if it exists
      ansible.builtin.command: lxc profile delete '{{ profile_name }}'
      ignore_errors: true

    - name: Create LXD profile '{{ profile_name }}'
      ansible.builtin.command: lxc profile copy default '{{ profile_name }}'

    - name: Remove existing eth0 device from '{{ profile_name }}' if it exists
      ansible.builtin.command: lxc profile device remove '{{ profile_name }}' eth0
      ignore_errors: true

    - name: Configure '{{ profile_name }}' to use lxdbr0
      ansible.builtin.command: lxc profile device add '{{ profile_name }}' eth0 nic nictype=bridged parent=lxdbr0 name=eth0

    - name: Remove existing disk device from '{{ profile_name }}' if it exists
      ansible.builtin.command: lxc profile device remove '{{ profile_name }}' root
      ignore_errors: true

    - name: Add disk to '{{ profile_name }}'
      ansible.builtin.command: lxc profile device add '{{ profile_name }}' root disk path=/ pool=default

    - name: Initialize containers with '{{ profile_name }}'
      ansible.builtin.command: lxc init ubuntu:22.04 -p '{{ profile_name }}' '{{ item }}'
      loop: '{{ containers }}'


    - name: Start container
      ansible.builtin.command: lxc start '{{ item }}'
      loop: '{{ containers }}'

   # - name: Start container '{{ conatiner_name2 }}
     # ansible.builtin.command: lxc start cont2


    - name: Ensure all containers are running
      ansible.builtin.command: lxc list
      register: container_list

    - debug:
        var: container_list
